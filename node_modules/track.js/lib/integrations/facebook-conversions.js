// Generated by CoffeeScript 1.11.1
var FacebookConversions, Integration,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Integration = require('../integration');

module.exports = FacebookConversions = (function(superClass) {
  extend(FacebookConversions, superClass);

  FacebookConversions.prototype.src = {
    type: 'script',
    url: '//connect.facebook.net/en_US/fbds.js'
  };

  function FacebookConversions(opts) {
    this.opts = opts;
  }

  FacebookConversions.prototype.init = function() {
    if (window._fbq != null) {
      return;
    }
    return window._fbq = [];
  };

  FacebookConversions.prototype.load = function() {
    if (typeof _fbq !== "undefined" && _fbq !== null ? _fbq.loaded : void 0) {
      return;
    }
    FacebookConversions.__super__.load.apply(this, arguments);
    return _fbq.loaded = true;
  };

  FacebookConversions.prototype.page = function(category, name, props, cb) {
    if (arguments.length === 1) {
      name = category;
    }
    return this.track(name, props, cb);
  };

  FacebookConversions.prototype.track = function(event, props, cb) {
    var currency, id, ref, ref1, ref2, ref3, value;
    if (event !== this.opts.event) {
      return;
    }
    id = this.opts.id;
    value = (ref = (ref1 = props.value) != null ? ref1 : this.opts.value) != null ? ref : '0.00';
    currency = (ref2 = (ref3 = props.currency) != null ? ref3 : this.opts.currency) != null ? ref2 : 'USD';
    return _fbq.push([
      'track', id, {
        value: value,
        currency: currency
      }
    ]);
  };

  return FacebookConversions;

})(Integration);

//# sourceMappingURL=facebook-conversions.js.map
