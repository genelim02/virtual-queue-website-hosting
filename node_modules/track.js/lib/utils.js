// Generated by CoffeeScript 1.11.1
exports.onload = function(el, cb) {
  var add, attach;
  add = function(el, cb) {
    el.addEventListener('load', function(_, e) {
      return cb(null, e);
    }, false);
    return el.addEventListener('error', function(e) {
      var err;
      err = new Error("failed to load the script '" + el.src + "'");
      err.event = e;
      return cb(err);
    }, false);
  };
  attach = function(el, cb) {
    el.attachEvent('onreadystatechange', function(e) {
      if (!/complete|loaded/.test(el.readyState)) {
        return;
      }
      return cb(null, e);
    });
    return el.attachEvent('onerror', function(e) {
      var err;
      err = new Error("failed to load the script '" + el.src + "'");
      err.event = e || window.event;
      return cb(err);
    });
  };
  if (el.addEventListener) {
    return add(el, cb);
  } else {
    return attach(el, cb);
  }
};

exports.tld = function(domain) {
  var match;
  match = domain.match(/[^.\s\/]+\.([a-z]{3,}|[a-z]{2}.[a-z]{2})$/);
  if (match != null) {
    return match[0];
  } else {
    return domain;
  }
};

exports.safariPrivateBrowsing = function() {
  try {
    localStorage.t = 0;
    return false;
  } catch (error) {
    return true;
  }
};

exports.uuid = function() {
  var i, j, lut;
  lut = [];
  for (i = j = 0; j < 256; i = ++j) {
    lut[i] = (i < 16 ? '0' : '') + i.toString(16);
  }
  return (function() {
    var d0, d1, d2, d3;
    d0 = Math.random() * 0xffffffff | 0;
    d1 = Math.random() * 0xffffffff | 0;
    d2 = Math.random() * 0xffffffff | 0;
    d3 = Math.random() * 0xffffffff | 0;
    return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];
  })();
};

//# sourceMappingURL=utils.js.map
